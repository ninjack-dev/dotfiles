# Note:
# In instances of bindd where commas are desired, you can use 
# - '‚' (U+201A) Single Low-9 Quotation Mark
# - '，' (U+FF0C) Fullwidth Comma
# - '﹐' (U+FE50) Small Comma

###############
### GENERAL ###
###############

# See https://wiki.hyprland.org/Configuring/Keywords/
$mainMod = SUPER

$fnF4 = XF86AudioMicMute
$fnF7 = XF86Display
$fnF8 = XF86WLAN
$fnF10 = XF86SelectiveScreenshot
$fnF11 = XKB_KEY_oslash

bindd = , Super_L, Global SUPER detection shortcut‚ used to provide bind context to some widgets, global, :Super

# bindd = $mainMod, W, Closes (not kills) the active window, killactive
bindd = $mainMod, W, Closes (not kills) the active window, exec, ~/.config/hypr/scripts/close_window.sh
bindd = $mainMod Shift_L Alt_L Control_L, B, Reload Hyperland, forcerendererreload,
bindd = $mainMod, Delete, Exits Hyprland, exit,
bindd = $mainMod, V, Toggles the floating state of the active window, togglefloating,
bindd = $mainMod, R, Renames the active workspace with Rofi, exec, pkill -f "$workspaceRenamer" || $workspaceRenamer

# Move focus with mainMod + arrow keys
bindd = $mainMod, H, Moves focus to the window left of active, movefocus, l
bindd = $mainMod, J, Moves focus to the window below active, movefocus, d
bindd = $mainMod, K, Moves focus to the window above active, movefocus, u
bindd = $mainMod, L, Moves focus to the window right of active, movefocus, r

# Move windows
bindd = $mainMod SHIFT, H, Moves window left, movewindow, l 
bindd = $mainMod SHIFT, J, Moves window down, movewindow, d
bindd = $mainMod SHIFT, K, Moves window up, movewindow, u 
bindd = $mainMod SHIFT, L, Moves window right, movewindow, r 

bindd = $mainMod, P, Pins a floating window, pin

bindd = $mainMod, Z, Resets AGS, exec, ags quit -i bar ; ags run ~/.config/ags/bar ; ags quit -i notifications ; ags run ~/.config/ags/notifications

bindd = $mainMod, Tab, Cycle to next window in workspace, cyclenext,
bindd = $mainMod, Tab, Cycle to next window in workspace, bringactivetotop,
# These don't really work, maybe due to dwindle. It just oscillates between 2 windows.
# bind = $mainMod SHIFT, Tab, cyclenext, prev
# bind = $mainMod SHIFT, Tab, bringactivetotop,

bindd = $mainMod, F, Maximize a window, fullscreen, 1
bindd = SHIFT $mainMod, F, Fullscreen a window, fullscreen, 0

# Switch workspaces with mainMod + [0-9]
bindd = $mainMod, 1, Go to workspace 1, workspace, 1
bindd = $mainMod, 2, Go to workspace 2, workspace, 2
bindd = $mainMod, 3, Go to workspace 3, workspace, 3
bindd = $mainMod, 4, Go to workspace 4, workspace, 4
bindd = $mainMod, 5, Go to workspace 5, workspace, 5
bindd = $mainMod, 6, Go to workspace 6, workspace, 6
bindd = $mainMod, 7, Go to workspace 7, workspace, 7
bindd = $mainMod, 8, Go to workspace 8, workspace, 8
bindd = $mainMod, 9, Go to workspace 9, workspace, 9
bindd = $mainMod, 0, Go to workspace 10, workspace, 10

bindd = $mainMod ALT, 1, Go to workspace 11, workspace, 11
bindd = $mainMod ALT, 2, Go to workspace 12, workspace, 12
bindd = $mainMod ALT, 3, Go to workspace 13, workspace, 13
bindd = $mainMod ALT, 4, Go to workspace 14, workspace, 14
bindd = $mainMod ALT, 5, Go to workspace 15, workspace, 15
bindd = $mainMod ALT, 6, Go to workspace 16, workspace, 16
bindd = $mainMod ALT, 7, Go to workspace 17, workspace, 17
bindd = $mainMod ALT, 8, Go to workspace 18, workspace, 18
bindd = $mainMod ALT, 9, Go to workspace 19, workspace, 19
bindd = $mainMod ALT, 0, Go to workspace 20, workspace, 20

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bindd = $mainMod SHIFT, 1, Move active window to workspace 1, movetoworkspace, 1
bindd = $mainMod SHIFT, 2, Move active window to workspace 2, movetoworkspace, 2
bindd = $mainMod SHIFT, 3, Move active window to workspace 3, movetoworkspace, 3
bindd = $mainMod SHIFT, 4, Move active window to workspace 4, movetoworkspace, 4
bindd = $mainMod SHIFT, 5, Move active window to workspace 5, movetoworkspace, 5
bindd = $mainMod SHIFT, 6, Move active window to workspace 6, movetoworkspace, 6
bindd = $mainMod SHIFT, 7, Move active window to workspace 7, movetoworkspace, 7
bindd = $mainMod SHIFT, 8, Move active window to workspace 8, movetoworkspace, 8
bindd = $mainMod SHIFT, 9, Move active window to workspace 9, movetoworkspace, 9
bindd = $mainMod SHIFT, 0, Move active window to workspace 10, movetoworkspace, 10

bindd = $mainMod ALT SHIFT, 1, Move active window to workspace 11, movetoworkspace, 11
bindd = $mainMod ALT SHIFT, 2, Move active window to workspace 12, movetoworkspace, 12
bindd = $mainMod ALT SHIFT, 3, Move active window to workspace 13, movetoworkspace, 13
bindd = $mainMod ALT SHIFT, 4, Move active window to workspace 14, movetoworkspace, 14
bindd = $mainMod ALT SHIFT, 5, Move active window to workspace 15, movetoworkspace, 15
bindd = $mainMod ALT SHIFT, 6, Move active window to workspace 16, movetoworkspace, 16
bindd = $mainMod ALT SHIFT, 7, Move active window to workspace 17, movetoworkspace, 17
bindd = $mainMod ALT SHIFT, 8, Move active window to workspace 18, movetoworkspace, 18
bindd = $mainMod ALT SHIFT, 9, Move active window to workspace 19, movetoworkspace, 19
bindd = $mainMod ALT SHIFT, 0, Move active window to workspace 20, movetoworkspace, 20

# Scroll through existing workspaces with mainMod + scroll
bindd = $mainMod, mouse_down, Scroll to the next existing workspace, workspace, e+1
bindd = $mainMod, mouse_up, Scroll to the previous existing workspace, workspace, e-1

# Move/resize windows with mainMod + LMB/RMB and dragging
binddm = $mainMod, mouse:272, Move the window by dragging, movewindow
binddm = $mainMod, mouse:273, Resize the window by dragging, resizewindow

bindd = $mainMod SHIFT, R, Force a window to be 16:9, exec, nu -c 'hyprctl dispatch resizewindowpixel exact (hyprctl clients -j | from json | where floating == true | first |  get size | $"(($in.0 / 16 | math round) * 16) (($in.0 / 16 | math round) * 9)") ,floating'

bindd = $mainMod CTRL SHIFT, R, Resize the active display, exec, rofi -show resize_display

binddle = , XF86AudioRaiseVolume, Raise volume by 5%, exec, wpctl set-volume -l 1.0  @DEFAULT_SINK@ 5%+
binddle = , XF86AudioLowerVolume, Lower volume by 5%, exec, wpctl set-volume @DEFAULT_SINK@ 5%-
binddl = , XF86AudioMute, Toggle audio mute, exec, wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle

binddl = , XF86AudioPlay, Play/pause current audio track, exec, playerctl play-pause
binddl = , XF86AudioNext, Skip to previous audio track, exec, playerctl next
binddl = , XF86AudioPrev, Skip to next audio track, exec, playerctl previous

binddle = , XF86MonBrightnessUp, Raise screen brightness by 10%, exec, brightnessctl -s set 10%+
binddle = , XF86MonBrightnessDown, Lower screen brightness by 10%, exec, brightnessctl -s set 10%-

# TODO - Update this to toggle between auto-down/auto-up
# bind = $mainMod, m, exec, hyprctl keyword monitor DP-1,highres@highrr,auto-right,1 

# TODO - Create shell scripts for all of these. Make sure that proper XDG environment settings are set such that I can put XDG_PICTURES_DIR or whatever instead of the hardcoded path.
# I also want to make sure that when selecting the file name, if it already exists I should recursively add a number to the end.
# For the file name, might be nice to get the title of the active window. 
bindd = , Print, Take a selection-based screenshot, exec, ~/.config/hypr/scripts/screenshot.sh
bindd = $mainMod, Print, Take a screenshot of the full display, exec, grim - | tee "$HOME"/Pictures/Captures/"$(date +%m-%y)"/"$(date +%d-%H:%M)".png | "$COPY_UTIL"
bindd = SHIFT, Print, Begin screen recording‚ or kill current screen recorder process, exec, pkill wf-recorder || wf-recorder --geometry "$(slurp -d)" -F fps=20 -c gif -f "$HOME"/Pictures/Captures/"$(date +%m-%y)"/"$(date +%d-%H:%M)".gif # TODO - Fix this

# TODO Add bind for the following:
# hyprctl dispatch setprop floating alphainactive 0.4
# hyprctl dispatch setprop floating noblur on

#########################
### PROGRAM SHORTCUTS ###
#########################

bindd = $mainMod, Q, Opens default terminal‚ $terminal, exec, $terminal
bindd = $mainMod SHIFT, Q, Opens default terminal‚ $terminal‚ with a small TUI to pick the shell, exec, $terminal shell-picker.sh

bindd = $mainMod, B, Launch a new Brave browser window, exec, $browser
bindd = $mainMod SHIFT, B, Launch a new private browser window, exec, $privateBrowser

bindd = $mainMod CTRL, H, Opens Hyprland wiki in Brave, exec, $browser --app="https://wiki.hypr.land"

bindd = $mainMod, E, Open the file explorer‚ Dolphin, exec, $fileManager

bindd = $mainMod, Space, Launch or close the system launcher‚ Rofi, exec, pkill -f "$menu" || $menu

bindd = $mainMod, Period, Open the character map‚ Gucharmap (will be replaced),exec, [move onscreen cursor 0 -100%] $characterMap # Positions character map at bottom left of cursor

bindd = , XF86Favorites, Edit NixOS configuration, exec, neovide --fork -- -c "lcd ~/.config/nixos" -c NvimTreeToggle
bindd = , XF86LaunchA, Edit NixOS configuration, exec, neovide --fork -- -c "lcd ~/.config/nixos" -c NvimTreeToggle

bindd = $mainMod, C, Open color picker, exec, hyprpicker --autocopy --format=hex

bindd = $mainMod, F1, Launch Qalculate, exec, $calculator
bindd = $mainMod, F2, Launch Excalidraw, exec, launch-named-app Excalidraw

bindd = $mainMod, O, Open Obsidian‚ or switch to it, exec, ~/.config/hypr/scripts/launch-goto-or-pull.sh obsidian
bindd = $mainMod SHIFT, O, Open Obsidian‚ or bring it to current workspace, exec, ~/.config/hypr/scripts/launch-goto-or-pull.sh obsidian pull

bindd = $mainMod, D, Open Discord‚ or switch to it, exec, ~/.config/hypr/scripts/launch-goto-or-pull.sh discord
bindd = $mainMod SHIFT, D, Open Discord‚ or bring it to current workspace, exec, ~/.config/hypr/scripts/launch-goto-or-pull.sh discord pull

bindd = $mainMod, N, Opens Neovim, exec, neovide

### KITTY PANELS ###

bindd = $mainMod SHIFT, N, Opens a file searcher in a terminal panel and opens the result in Neovim, exec, pkill -f "$nvimSearch" || $nvimSearch
bindd = $mainMod, Escape, Opens btop in a terminal panel, exec, pkill -f "$btop" || $btop

###############
### SUBMAPS ###
###############
# TODO:
# - [ ] Extend the notify-send calls to track the ID (with --print-id and --replace-id) to replace group mode switching. Perhaps worth looking into https://specifications.freedesktop.org/notification-spec/latest/
# - [x] Alternatively, track the current submap state and reflect it in my bar.

### Group Mode ###

bindd = $mainMod, G, Enter group mode (WIP), submap, group_mode
submap = group_mode

bindd = $mainMod, G, Exit group mode, submap, reset
submap = reset

### Remote Mode ###

bindd = $mainMod, Insert, Enter remote access mode; all binds except for this one are disabled, submap, moonlight_mode
submap = remote_access_mode 

bindd = $mainMod, Insert, Exit remote access mode, submap, reset
submap = reset

##################
### MISC. KEYS ###
##################

# = , XKB_KEY_oslash, exec # Fn + F11 key on Thinkpad
