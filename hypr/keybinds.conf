# Note:
# In instances of bindd where commas are desired, you can use 
# - '‚' (U+201A) Single Low-9 Quotation Mark
# - '，' (U+FF0C) Fullwidth Comma
# - '﹐' (U+FE50) Small Comma

###############
### GENERAL ###
###############

# See https://wiki.hyprland.org/Configuring/Keywords/
$mainMod = SUPER

$fnF4 = XF86AudioMicMute
$fnF7 = XF86Display
$fnF8 = XF86WLAN
$fnF10 = XF86SelectiveScreenshot
$fnF11 = XKB_KEY_oslash

bind = , Super_L, global, :Super

# bindd = $mainMod, W, Closes (not kills) the active window, killactive
bindd = $mainMod, W, Closes (not kills) the active window, exec, ~/.config/hypr/scripts/close_window.sh
bind = $mainMod Shift_L Alt_L Control_L, B, forcerendererreload,
bindd = $mainMod, Delete, Exits Hyprland, exit,
bindd = $mainMod, V, Toggles the floating state of the active window, togglefloating,
bindd = $mainMod, R, Renames the active workspace with Rofi, exec, pkill -f "$workspaceRenamer" || $workspaceRenamer

# Move focus with mainMod + arrow keys
bindd = $mainMod, H, Moves focus to the window left of active, movefocus, l
bindd = $mainMod, J, Moves focus to the window below active, movefocus, d
bindd = $mainMod, K, Moves focus to the window above active, movefocus, u
bindd = $mainMod, L, Moves focus to the window right of active, movefocus, r

# Move windows
bindd = $mainMod SHIFT, H, Moves window left, movewindow, l 
bindd = $mainMod SHIFT, J, Moves window down, movewindow, d
bindd = $mainMod SHIFT, K, Moves window up, movewindow, u 
bindd = $mainMod SHIFT, L, Moves window right, movewindow, r 

bindd = $mainMod, P, Pins a floating window, pin

bind = $mainMod, Tab, cyclenext,
bind = $mainMod, Tab, bringactivetotop,
# These don't really work, maybe due to dwindle. It just oscillates between 2 windows.
# bind = $mainMod SHIFT, Tab, cyclenext, prev
# bind = $mainMod SHIFT, Tab, bringactivetotop,

bind = $mainMod, F, fullscreen, 1
bind = SHIFT $mainMod, F, fullscreen, 0

# Switch workspaces with mainMod + [0-9]
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10

bind = $mainMod ALT, 1, workspace, 11
bind = $mainMod ALT, 2, workspace, 12
bind = $mainMod ALT, 3, workspace, 13
bind = $mainMod ALT, 4, workspace, 14
bind = $mainMod ALT, 5, workspace, 15
bind = $mainMod ALT, 6, workspace, 16
bind = $mainMod ALT, 7, workspace, 17
bind = $mainMod ALT, 8, workspace, 18
bind = $mainMod ALT, 9, workspace, 19
bind = $mainMod ALT, 0, workspace, 20

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, 10

bind = $mainMod ALT SHIFT, 1, movetoworkspace, 11
bind = $mainMod ALT SHIFT, 2, movetoworkspace, 12
bind = $mainMod ALT SHIFT, 3, movetoworkspace, 13
bind = $mainMod ALT SHIFT, 4, movetoworkspace, 14
bind = $mainMod ALT SHIFT, 5, movetoworkspace, 15
bind = $mainMod ALT SHIFT, 6, movetoworkspace, 16
bind = $mainMod ALT SHIFT, 7, movetoworkspace, 17
bind = $mainMod ALT SHIFT, 8, movetoworkspace, 18
bind = $mainMod ALT SHIFT, 9, movetoworkspace, 19
bind = $mainMod ALT SHIFT, 0, movetoworkspace, 20

# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

bind = $mainMod SHIFT, R, exec, nu -c 'hyprctl dispatch resizewindowpixel exact (hyprctl clients -j | from json | where floating == true | first |  get size | $"(($in.0 / 16 | math round) * 16) (($in.0 / 16 | math round) * 9)") ,floating'

bindle = , XF86AudioRaiseVolume, exec, wpctl set-volume -l 1.0  @DEFAULT_SINK@ 5%+
bindle = , XF86AudioLowerVolume, exec, wpctl set-volume @DEFAULT_SINK@ 5%-
bindl = , XF86AudioMute, exec, wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle

bindl = , XF86AudioPlay, exec, playerctl play-pause
bindl = , XF86AudioPrev, exec, playerctl previous
bindl = , XF86AudioNext, exec, playerctl next

bindle = , XF86MonBrightnessUp, exec, brightnessctl -s set 10%+
bindle = , XF86MonBrightnessDown, exec, brightnessctl -s set 10%-

# TODO - Update this to toggle between auto-down/auto-up
# bind = $mainMod, m, exec, hyprctl keyword monitor DP-1,highres@highrr,auto-right,1 

# TODO - Create shell scripts for all of these. Make sure that proper XDG environment settings are set such that I can put XDG_PICTURES_DIR or whatever instead of the hardcoded path.
# I also want to make sure that when selecting the file name, if it already exists I should recursively add a number to the end.
# For the file name, might be nice to get the title of the active window. 
bind = , Print, exec, ~/.config/hypr/scripts/screenshot.sh
bind = $mainMod, Print, exec, grim - | tee "$HOME"/Pictures/Captures/"$(date +%m-%y)"/"$(date +%d-%H:%M)".png | "$COPY_UTIL"
bind = SHIFT, Print, exec, pkill wf-recorder || wf-recorder --geometry "$(slurp -d)" -F fps=20 -c gif -f "$HOME"/Pictures/Captures/"$(date +%m-%y)"/"$(date +%d-%H:%M)".gif # TODO - Fix this

# TODO Add bind for the following:
# hyprctl dispatch setprop floating alphainactive 0.4
# hyprctl dispatch setprop floating noblur on

#########################
### PROGRAM SHORTCUTS ###
#########################

bindd = $mainMod, Q, Opens default terminal‚ $terminal, exec, $terminal

bind = $mainMod, B, exec, $browser
bind = $mainMod SHIFT, B, exec, $privateBrowser

bind = $mainMod, E, exec, $fileManager

bind = $mainMod, Space, exec, pkill -f "$menu" || $menu

bind = $mainMod, Period, exec, [move onscreen cursor 0 -100%] $characterMap # Positions character map at bottom left of cursor

bind = , XF86Favorites, exec, neovide --fork -- -c "lcd ~/.config/nixos" -c NvimTreeToggle
bind = , XF86LaunchA, exec, neovide --fork -- -c "lcd ~/.config/nixos" -c NvimTreeToggle

bind = $mainMod, C, exec, hyprpicker --autocopy --format=hex
bind = $mainMod, F1, exec, $calculator

bind = $mainMod, O, exec, ~/.config/hypr/scripts/launch-goto-or-pull.sh obsidian
bind = $mainMod SHIFT, O, exec, ~/.config/hypr/scripts/launch-goto-or-pull.sh obsidian pull

bind = $mainMod, D, exec, ~/.config/hypr/scripts/launch-goto-or-pull.sh discord
bind = $mainMod SHIFT, D, exec, ~/.config/hypr/scripts/launch-goto-or-pull.sh discord pull

### KITTY PANELS ###

bindd = $mainMod, N, Opens a file searcher in a terminal panel and opens the result in Neovim, exec, pkill -f "$nvimSearch" || $nvimSearch
bindd = $mainMod, Escape, Opens btop in a terminal panel, exec, pkill -f "$btop" || $btop

###############
### SUBMAPS ###
###############
# TODO:
# - Extend the notify-send calls to track the ID (with --print-id and --replace-id) to replace group mode switching. Perhaps worth looking into https://specifications.freedesktop.org/notification-spec/latest/
# - Alternatively, track the current submap state and reflect it in my bar.

### Group Mode ###

bind = $mainMod, G, exec, notify-send "Entering group mode"
bind = $mainMod, G, submap, group_mode
submap = group_mode

#bind = , mouse:272, tag with group indicator
#bind = , mouse:273, untag with group indicator
bind = , escape, exec, notify-send --icon=hyprland --app-name=Hyprland --expire-time=4 "Exiting group mode"
bind = , escape, submap, reset

bind = $mainMod, G, exec, notify-send --icon=hyprland --app-name=Hyprland --expire-time=4 "Exiting group mode"
bind = $mainMod, G, submap, reset

submap = reset

# Obsolete; somehow (and the implications are terrifying given my previous assumptions about Wayland), 
# Moonlight is perfectly capable of intercepting all input.
# ### Moonlight Mode ###
#
# bind = $mainMod, Insert, exec, notify-send --icon=hyprland --app-name=Hyprland --expire-time=4000 "Entering Moonlight mode"
# bind = $mainMod, Insert, submap, moonlight_mode
# submap = moonlight_mode
#
# bind = $mainMod, Insert, exec, notify-send --icon=hyprland --app-name=Hyprland --expire-time=4000 "Exiting Moonlight mode"
# bind = $mainMod, Insert, submap, reset
#
# submap = reset

##################
### MISC. KEYS ###
##################

# = , XKB_KEY_oslash, exec # Fn + F11 key on Thinkpad
