#!/usr/bin/env -S nvim --headless -l

local socket = vim.env.NVIM
if not socket then
  io.stderr:write("$NVIM not set. Start Neovim with --listen\n")
  os.exit(1)
end

local lines = {}
for line in io.lines() do
  table.insert(lines, line)
end

local chan = vim.fn.sockconnect("pipe", socket, { rpc = true })
if chan == 0 then
  io.stderr:write("Failed to connect to Neovim socket at " .. socket .. "\n")
  os.exit(1)
end

local code = string.format([[
  local buf = vim.api.nvim_create_buf(true, false)
  vim.api.nvim_set_current_buf(buf)
  vim.api.nvim_buf_set_lines(buf, 0, -1, false, %s)
  if vim.api.nvim_buf_get_lines(buf, 0, 1, false)[1] == '' then
    vim.api.nvim_buf_set_lines(buf, 0, 1, false, {})
  end
  vim.api.nvim_buf_set_option(buf, "modified", false)
]], vim.inspect(lines))

local ok, err = pcall(vim.fn.rpcrequest, chan, "nvim_exec_lua", code, {})
if not ok then
  io.stderr:write("Error sending data: " .. tostring(err) .. "\n")
  os.exit(1)
end

vim.fn.chanclose(chan)
os.exit(0)
